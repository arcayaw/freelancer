
/* custom properties se pueden usar tipo variables para CSS*/
:root {
    --oscuro: #212121;
    --primary: #ffc107;
    --secundario: #0097a7;
}


/* apply a natural box layout model to all elements, but allowing components to change */

html {
    box-sizing: border-box;
    min-height: 100%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}


/*https://webgradients.com/ */

body {
    font-family: 'Josefin Sans', sans-serif;
    background-image: linear-gradient(15deg, #13547a 0%, #80d0c7 100%);
    font-size: 1.5rem;
}


/*.site-header {
    background-color: white;
}
*/




h1,
h2,
h3 {
    margin: 0;
}

h2,
h3 {
    text-align: center;
}

h3 {
    color: var(--secundario);
    font-weight: 400;
    font-size: 1.6rem;
}

p{
    font-size: 1.4rem;
    line-height: 2;
    text-align: center;
}
/*el flexbox siempre se lo aplico al contenedor padre*/
.site-header nav {
    max-width: 90%;
    margin: 0 auto;
    padding: 2rem 0;
    /*habilito flex con display: flex*/
    display: flex;
    /*coloco los elementos de arriba hacia abajo en el flex, tambien existe column reverse, row(que es el normal),  reverse row que ellev el primer item al ultimo lugar*/
    justify-content: flex-start;
    flex-direction: column; /* ordena los items en columnas*/
    /*el flex direction ignores all justify content, por eso uso entonces align-items center*/
    align-items: center;
}

@media (min-width:960px) {
    .site-header nav {
        max-width: 960px;
    }
}

@media (min-width:768px) {
    .site-header nav {
        /*el flex declarado en el padre se hereda aca por lo cual no hace falta declarar de nuevo*/
        flex-direction: row;
        justify-content: space-between;
    }
}

.site-header nav a {
    color: var(--oscuro);
    /* color: greenyellow;*/
    font-weight: bold;
    font-size: 2.2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}

.site-header nav a:last-of-type {
    margin-bottom: 0;
}

@media (min-width:768px) {
    .site-header nav a {
        margin-bottom: 0;
    }
}

.hero {
    height: 30rem;
    background-image: url(../freelancer/img/hero.jpg);
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    flex-direction: row;
}

.hero::after {
    content: '';
    /*genero la transparencia en la imagen*/
    background-color: rgba(0, 0, 0, .7);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.contenedor-hero {
    color: white;
    position: relative;
    z-index: 1;
    text-align: center;
    /*Damos color blanco al contenido, lo centramos, lo traemos adelante de la opacidad para que se pueda ver, */
}

.contenedor-hero i {
    font-size: 4rem;
    color: var(--primary);
}

.boton {
    background-color: var(--secundario);
    padding: 1rem 5rem;
    display: inline-block;
    margin-top: 1rem;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 1.5rem;
    border-radius: .5rem;
}

.contenedor {
    max-width: 1200px;
    margin: 0 auto;
    background-color: white;
    padding: 3rem;
    border-radius: 1rem;
    -webkit-box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
    -moz-box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
    box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
}

.servicios {
    margin: 3rem auto;
}



@media (min-width:760px){
    .contenedor-servicios{
        display: flex;
        justify-content: space-between;
        margin:2 2 rem;
    }
    .servicio{
        flex: 0 0 calc(33.3% -1rem);
    }
}


.servicio{
    display: flex;
    flex-direction:  column;
    align-items:  center;
}
.iconos {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: var(--primary);
    display: flex;
    justify-content: space-evenly; /* *centra vertical */
    
    align-items: center; /* *centra vertical */
    margin: 0 auto;
    margin-top:  2rem;
}

.iconos{
    font-size: 2rem;
    

}

form{
    background-color: cadetblue;/*en el curso crearon una variable para color pero me da paja*/
    padding: 2rem;
    border-radius: 1rem;
    margin-top: 2rem;
}

form legend{
    text-align: center;
    font-size:  2rem;
    color: var(--primary);
    margin-bottom: 1rem;
}   

@media (min-width:768px){
    form{
        max-width: 800px;
        margin: 3rem auto;
    } 
    .contenedor-campos{
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    .campo {
        flex: 0 0 calc(50% - 1rem);
    }
}
.campo {
    display: flex;
    margin-bottom: 2rem;
    align-items: center;
}
.campo label{
    flex: 0 0 90px;
    margin-right: 1rem;
}
.campo input{
    flex: 1; /*! flex 1 es el valor de crecimiento*/
    height: 2rem;
}

.campo textarea{
    flex: 1; /*! flex 1 es el valor de crecimiento*/
    height: 6rem;
}
/*TODO falta revisar porque los inputs no quedan uno al lado del otro, puede ser terma del media query que no este bien configurado */

.w-100{
    flex: 0 0 100%;
}
.boton:hover{
    cursor: pointer;/*mustra la manito*/
}

.enviar{ /* * Centro el boton*/
    display: flex;
    justify-content: center;
}